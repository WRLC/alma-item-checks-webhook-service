name: 'Build and Deploy Azure Function'

on:
  push:
    branches:
      - main
    paths:
      - 'alma_item_checks_webhook_service/**'
      - 'pyproject.toml'
      - 'alembic/**'
      - 'function_app.py'
      - '.github/workflows/deploy.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3

      - name: 'Install Poetry'
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .python_packages
          installer-parallel: true

      - name: 'Configure Poetry for Private Repository'
        run: poetry config http-basic.wrlc-python __token__ ${{ secrets.AZURE_DEVOPS_PAT }}

      - name: 'Build with Poetry'
        run: poetry install --without dev

      - name: 'Login to Azure'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Get Connection String'
        id: get-conn-string
        run: |
          FUNCTION_APP_NAME="almaitemchecks-${{ secrets.SERVICE_NAME }}"
          echo "Attempting to retrieve SQLALCHEMY_CONNECTION_STRING for ${FUNCTION_APP_NAME}...
          CONNECTION_STRING=$(az functionapp config appsettings list --name ${FUNCTION_APP_NAME} --resource-group ${{ secrets.RESOURCE_GROUP_NAME }} --slot stage --query "[?name=='SQLALCHEMY_CONNECTION_STRING'].value" -o tsv)

          if [ -z "$CONNECTION_STRING" ]; then
            echo "::error::Could not find SQLALCHEMY_CONNECTION_STRING in the staging slot's app settings."
            exit 1
          fi

          echo "Setting connection string as step output..."
          echo "connection_string=$CONNECTION_STRING" >> $GITHUB_OUTPUT
        env:
          RESOURCE_GROUP_NAME: ${{ secrets.RESOURCE_GROUP_NAME }}
          SERVICE_NAME: ${{ secrets.SERVICE_NAME }}

      - name: 'Run Alembic Migrations'
        run: |
          echo "Running Alembic migrations..."
          poetry run alembic upgrade head
        env:
          SQLALCHEMY_CONNECTION_STRING: ${{ steps.get-conn-string.outputs.connection_string }}

      - name: 'Upload artifact'
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            .python_packages
            function_app.py
            host.json
            alembic/
            alma_item_checks_webhook_service/

  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Stage
    needs: build
    steps:
      - name: 'Download artifact'
        uses: actions/download-artifact@v5
        with:
          name: python-app
          path: .

      - name: 'Deploy to Azure Functions'
        uses: Azure/functions-action@v1
        with:
          app-name: "almaitemchecks-${{ secrets.SERVICE_NAME }}"
          slot-name: 'stage'
          package: '.'
